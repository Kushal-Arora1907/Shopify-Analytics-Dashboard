{
  "backgroundColor": "#e0dede",
  "borderColor": "#e0dede",
  "borderRadius": "0px",
  "borderWidth": "0",
  "bottomRow": 61,
  "boxShadow": "none",
  "defaultModel": "",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    }
  ],
  "dynamicHeight": "AUTO_HEIGHT",
  "dynamicPropertyPathList": [],
  "dynamicTriggerPathList": [],
  "events": [],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "q87y35uom8",
  "leftColumn": 0,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 341,
  "mobileLeftColumn": 9,
  "mobileRightColumn": 32,
  "mobileTopRow": 311,
  "needsErrorInfo": false,
  "originalBottomRow": 61,
  "originalTopRow": 10,
  "parentColumnSpace": 17.0625,
  "parentId": "0",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 64,
  "shouldScrollContents": true,
  "srcDoc": {
    "css": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: Times New Roman;\n  background-color: #f5f5f3;\n  min-height: 30vh;\n}\n\n.container {\n  background-color: #f5f5f3;\n  margin: 0;\n  padding: 0;\n}\n\n.hero-section {\n  background-color: #f5f5f3;\n  padding: 60px 24px 0px 24px;\n  text-align: center;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.hero-tag {\n  font-size: 20px;\n  font-weight: 400;\n  color: #6b7280;\n  letter-spacing: 0.05em;\n  text-transform: uppercase;\n  margin-bottom: 16px;\n}\n\n.hero-title {\n  font-size: 68px;\n  font-weight: 400;\n  color: #1f2937;\n  line-height: 1.1;\n  margin-bottom: 16px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.hero-subtitle {\n  font-size: 20px;\n  color: #6b7280;\n  margin-bottom: 32px;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  line-height: 1.5;\n}\n\n.hero-button {\n  background-color: #000;\n  color: white;\n  padding: 14px 28px;\n  border: none;\n  border-radius: 50px;\n  font-size: 16px;\n  font-weight: 400;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.hero-button:hover {\n  background-color: #1f2937;\n  transform: translateY(-1px);\n}\n\n.filters-section {\n  background-color: #f5f5f3;\n  padding: 24px;\n  margin: 20px 24px 0 24px;\n  border-radius: 12px;\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  margin-bottom: 0;\n}\n\n.filters-row {\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr 1fr auto;\n  gap: 20px;\n  align-items: end;\n}\n\n.filter-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.filter-label {\n  font-size: 14px;\n  font-weight: 600;\n  color: #374151;\n}\n\n.date-range {\n  display: flex;\n  gap: 12px;\n  align-items: center;\n}\n\n.date-input {\n  padding: 10px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  color: #374151;\n  background-color: white;\n  min-width: 140px;\n}\n\n.date-separator {\n  color: #9ca3af;\n  font-weight: 500;\n}\n\n.filter-select {\n  padding: 10px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  color: #374151;\n  background-color: white;\n  cursor: pointer;\n  min-width: 120px;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e\");\n  background-position: right 8px center;\n  background-repeat: no-repeat;\n  background-size: 16px;\n  padding-right: 32px;\n}\n\n.filter-select:focus,\n.date-input:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.view-analytics-btn {\n  background-color: #000;\n  color: white;\n  padding: 10px 24px;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  height: fit-content;\n}\n\n.view-analytics-btn:hover {\n  background-color: #1f2937;\n}\n\n/* Responsive design */\n@media (max-width: 1024px) and (min-width: 769px) {\n  .filters-row {\n    grid-template-columns: 1fr 1fr;\n    gap: 20px;\n  }\n  .filter-group:first-child {\n    grid-column: 1/-1;\n  }\n  .filter-group:last-child {\n    grid-column: 1/-1;\n    justify-self: center;\n    margin-top: 8px;\n  }\n  .date-range {\n    justify-content: center;\n    max-width: 400px;\n    margin: 0 auto;\n  }\n}\n@media (max-width: 768px) {\n  .hero-title {\n    font-size: 32px;\n    line-height: 1.2;\n  }\n  .hero-subtitle {\n    font-size: 16px;\n  }\n  .hero-section {\n    padding: 40px 16px 0px 16px;\n  }\n  .filters-section {\n    margin: 20px 16px 0 16px;\n    padding: 24px 20px;\n  }\n  .filters-row {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    align-items: stretch;\n  }\n  .filter-group {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    width: 100%;\n  }\n  .date-range {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    align-items: stretch;\n  }\n  .date-separator {\n    display: none;\n  }\n  .date-input {\n    width: 100%;\n    min-width: auto;\n    padding: 12px 16px;\n    font-size: 16px;\n  }\n  .filter-select {\n    width: 100%;\n    padding: 12px 16px;\n    font-size: 16px;\n    min-width: auto;\n  }\n  .filter-label {\n    font-size: 15px;\n    font-weight: 600;\n    margin-bottom: 2px;\n  }\n  .view-analytics-btn {\n    width: 100%;\n    padding: 14px 24px;\n    font-size: 16px;\n    margin-top: 8px;\n  }\n}",
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Analytics and Reporting</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"hero-section\">\n            <div class=\"hero-tag\">Analytics and Reporting</div>\n            <h1 class=\"hero-title\">Make smart business decisions, quickly</h1>\n            <p class=\"hero-subtitle\">Real-time and reliable data about your store, no set-up required</p>\n            <button class=\"hero-button\" onclick=\"viewAnalytics()\">\n                View your analytics\n            </button>\n        </div>\n        \n        <div class=\"filters-section\">\n            <div class=\"filters-row\">\n                <div class=\"filter-group\">\n                    <label class=\"filter-label\">Date Range</label>\n                    <div class=\"date-range\">\n                        <input type=\"text\" class=\"date-input\" placeholder=\"mm / dd / yyyy\" id=\"startDate\">\n                        <span class=\"date-separator\">â€”</span>\n                        <input type=\"text\" class=\"date-input\" placeholder=\"mm / dd / yyyy\" id=\"endDate\">\n                    </div>\n                </div>\n                \n                <div class=\"filter-group\">\n                    <label class=\"filter-label\">Device Type</label>\n                    <select class=\"filter-select\" id=\"deviceType\">\n                        <option value=\"all\">All</option>\n                        <option value=\"mobile\">Mobile</option>\n                        <option value=\"desktop\">Desktop</option>\n                        <option value=\"tablet\">Tablet</option>\n                    </select>\n                </div>\n                \n                <div class=\"filter-group\">\n                    <label class=\"filter-label\">Country</label>\n                    <select class=\"filter-select\" id=\"country\">\n                        <option value=\"all\">All</option>\n                        <option value=\"us\">United States</option>\n                        <option value=\"ca\">Canada</option>\n                        <option value=\"uk\">United Kingdom</option>\n                        <option value=\"au\">Australia</option>\n                    </select>\n                </div>\n                \n                <div class=\"filter-group\">\n                    <label class=\"filter-label\">Product</label>\n                    <select class=\"filter-select\" id=\"product\">\n                        <option value=\"all\">All</option>\n                        <option value=\"clothing\">Clothing</option>\n                        <option value=\"accessories\">Accessories</option>\n                        <option value=\"electronics\">Electronics</option>\n                    </select>\n                </div>\n                \n                <div class=\"filter-group\">\n                    <button class=\"view-analytics-btn\" onclick=\"applyFilters()\">\n                        Apply Filters\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <script src=\"script.js\"></script>\n</body>\n</html>",
    "js": "// Initialize date inputs with today's date\nfunction initializeDates() {\n  const today = new Date();\n  const thirtyDaysAgo = new Date();\n  thirtyDaysAgo.setDate(today.getDate() - 30);\n  const formatDate = date => {\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  };\n  document.getElementById('startDate').value = formatDate(thirtyDaysAgo);\n  document.getElementById('endDate').value = formatDate(today);\n}\nfunction viewAnalytics() {\n  // This function can be connected to Appsmith navigation or API calls\n  console.log('Navigating to analytics dashboard...');\n  alert('Navigating to analytics dashboard...');\n  // Example: navigateTo('AnalyticsDashboard');\n\n  // For Appsmith integration, you can trigger:\n  // - Navigate to another page\n  // - Open a modal\n  // - Trigger a query\n  // - Update store values\n}\nfunction applyFilters() {\n  const filters = {\n    startDate: document.getElementById('startDate').value,\n    endDate: document.getElementById('endDate').value,\n    deviceType: document.getElementById('deviceType').value,\n    country: document.getElementById('country').value,\n    product: document.getElementById('product').value\n  };\n  console.log('Applied filters:', filters);\n  alert('Filters applied! Check console for details.');\n\n  // This can be connected to Appsmith queries\n  // Example: RefreshAnalyticsQuery.run(filters);\n\n  // Make filters available globally for Appsmith\n  window.analyticsFilters = filters;\n\n  // Trigger custom event that Appsmith can listen to\n  window.dispatchEvent(new CustomEvent('filtersChanged', {\n    detail: filters\n  }));\n\n  // You can also store filters in Appsmith store\n  // storeValue('analyticsFilters', filters);\n}\n\n// Utility function to get current filters\nfunction getCurrentFilters() {\n  return {\n    startDate: document.getElementById('startDate').value,\n    endDate: document.getElementById('endDate').value,\n    deviceType: document.getElementById('deviceType').value,\n    country: document.getElementById('country').value,\n    product: document.getElementById('product').value\n  };\n}\n\n// Function to update filters programmatically (for Appsmith integration)\nfunction updateFilters(newFilters) {\n  if (newFilters.startDate) document.getElementById('startDate').value = newFilters.startDate;\n  if (newFilters.endDate) document.getElementById('endDate').value = newFilters.endDate;\n  if (newFilters.deviceType) document.getElementById('deviceType').value = newFilters.deviceType;\n  if (newFilters.country) document.getElementById('country').value = newFilters.country;\n  if (newFilters.product) document.getElementById('product').value = newFilters.product;\n\n  // Auto-apply the new filters\n  applyFilters();\n}\n\n// Function to reset filters to default\nfunction resetFilters() {\n  document.getElementById('deviceType').value = 'all';\n  document.getElementById('country').value = 'all';\n  document.getElementById('product').value = 'all';\n  initializeDates();\n  applyFilters();\n}\n\n// Make functions available globally for Appsmith integration\nwindow.viewAnalytics = viewAnalytics;\nwindow.applyFilters = applyFilters;\nwindow.getCurrentFilters = getCurrentFilters;\nwindow.updateFilters = updateFilters;\nwindow.resetFilters = resetFilters;\nwindow.getFilters = () => window.analyticsFilters;\n\n// Initialize the component when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', function () {\n  initializeDates();\n\n  // Set up event listeners for auto-applying filters\n  document.querySelectorAll('.filter-select, .date-input').forEach(element => {\n    element.addEventListener('change', function () {\n      // Auto-apply filters after a short delay\n      setTimeout(applyFilters, 300);\n    });\n  });\n\n  // Initialize filters object\n  window.analyticsFilters = getCurrentFilters();\n  console.log('Analytics hero section initialized');\n});\n\n// Additional utility functions for Appsmith integration\nconst AnalyticsUtils = {\n  // Format date for display\n  formatDate: date => {\n    if (!date) return '';\n    const d = new Date(date);\n    const month = (d.getMonth() + 1).toString().padStart(2, '0');\n    const day = d.getDate().toString().padStart(2, '0');\n    const year = d.getFullYear();\n    return `${month}/${day}/${year}`;\n  },\n  // Parse date from string\n  parseDate: dateString => {\n    if (!dateString) return null;\n    const [month, day, year] = dateString.split('/');\n    return new Date(year, month - 1, day);\n  },\n  // Validate date range\n  validateDateRange: () => {\n    const startDate = AnalyticsUtils.parseDate(document.getElementById('startDate').value);\n    const endDate = AnalyticsUtils.parseDate(document.getElementById('endDate').value);\n    if (startDate && endDate && startDate > endDate) {\n      alert('Start date must be before end date');\n      return false;\n    }\n    return true;\n  },\n  // Get date range in days\n  getDateRangeInDays: () => {\n    const startDate = AnalyticsUtils.parseDate(document.getElementById('startDate').value);\n    const endDate = AnalyticsUtils.parseDate(document.getElementById('endDate').value);\n    if (startDate && endDate) {\n      const diffTime = Math.abs(endDate - startDate);\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      return diffDays;\n    }\n    return 0;\n  }\n};\n\n// Make utility functions available globally\nwindow.AnalyticsUtils = AnalyticsUtils;"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 10,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": "* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: Times New Roman;\n    background-color: #f5f5f3;\n    min-height: 30vh;\n}\n\n.container {\n    background-color: #f5f5f3;\n    margin: 0;\n    padding: 0;\n}\n\n.hero-section {\n    background-color: #f5f5f3;\n    padding: 60px 24px 0px 24px;\n    text-align: center;\n    max-width: 1200px;\n    margin: 0 auto;\n}\n\n.hero-tag {\n    font-size: 20px;\n    font-weight: 400;\n    color: #6b7280;\n    letter-spacing: 0.05em;\n    text-transform: uppercase;\n    margin-bottom: 16px;\n}\n\n.hero-title {\n    font-size: 68px;\n    font-weight: 400;\n    color: #1f2937;\n    line-height: 1.1;\n    margin-bottom: 16px;\n    max-width: 800px;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.hero-subtitle {\n    font-size: 20px;\n    color: #6b7280;\n    margin-bottom: 32px;\n    max-width: 600px;\n    margin-left: auto;\n    margin-right: auto;\n    line-height: 1.5;\n}\n\n.hero-button {\n    background-color: #000;\n    color: white;\n    padding: 14px 28px;\n    border: none;\n    border-radius: 50px;\n    font-size: 16px;\n    font-weight: 400;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    display: inline-flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.hero-button:hover {\n    background-color: #1f2937;\n    transform: translateY(-1px);\n}\n\n.filters-section {\n    background-color: #f5f5f3;\n    padding: 24px;\n    margin: 20px 24px 0 24px;\n    border-radius: 12px;\n    \n    max-width: 1200px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 20px;\n    margin-bottom: 0;\n}\n\n.filters-row {\n    display: grid;\n    grid-template-columns: 2fr 1fr 1fr 1fr auto;\n    gap: 20px;\n    align-items: end;\n}\n\n.filter-group {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n.filter-label {\n    font-size: 14px;\n    font-weight: 600;\n    color: #374151;\n}\n\n.date-range {\n    display: flex;\n    gap: 12px;\n    align-items: center;\n}\n\n.date-input {\n    padding: 10px 12px;\n    border: 1px solid #d1d5db;\n    border-radius: 6px;\n    font-size: 14px;\n    color: #374151;\n    background-color: white;\n    min-width: 140px;\n}\n\n.date-separator {\n    color: #9ca3af;\n    font-weight: 500;\n}\n\n.filter-select {\n    padding: 10px 12px;\n    border: 1px solid #d1d5db;\n    border-radius: 6px;\n    font-size: 14px;\n    color: #374151;\n    background-color: white;\n    cursor: pointer;\n    min-width: 120px;\n    appearance: none;\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e\");\n    background-position: right 8px center;\n    background-repeat: no-repeat;\n    background-size: 16px;\n    padding-right: 32px;\n}\n\n.filter-select:focus,\n.date-input:focus {\n    outline: none;\n    border-color: #3b82f6;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.view-analytics-btn {\n    background-color: #000;\n    color: white;\n    padding: 10px 24px;\n    border: none;\n    border-radius: 6px;\n    font-size: 14px;\n    font-weight: 500;\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n    height: fit-content;\n}\n\n.view-analytics-btn:hover {\n    background-color: #1f2937;\n}\n\n/* Responsive design */\n@media (max-width: 1024px) and (min-width: 769px) {\n    .filters-row {\n        grid-template-columns: 1fr 1fr;\n        gap: 20px;\n    }\n    \n    .filter-group:first-child {\n        grid-column: 1 / -1;\n    }\n    \n    .filter-group:last-child {\n        grid-column: 1 / -1;\n        justify-self: center;\n        margin-top: 8px;\n    }\n    \n    .date-range {\n        justify-content: center;\n        max-width: 400px;\n        margin: 0 auto;\n    }\n}\n\n@media (max-width: 768px) {\n    .hero-title {\n        font-size: 32px;\n        line-height: 1.2;\n    }\n    \n    .hero-subtitle {\n        font-size: 16px;\n    }\n    \n    .hero-section {\n        padding: 40px 16px 0px 16px;\n    }\n    \n    .filters-section {\n        margin: 20px 16px 0 16px;\n        padding: 24px 20px;\n    }\n    \n    .filters-row {\n        display: flex;\n        flex-direction: column;\n        gap: 20px;\n        align-items: stretch;\n    }\n    \n    .filter-group {\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n        width: 100%;\n    }\n    \n    .date-range {\n        display: flex;\n        flex-direction: column;\n        gap: 12px;\n        align-items: stretch;\n    }\n    \n    .date-separator {\n        display: none;\n    }\n    \n    .date-input {\n        width: 100%;\n        min-width: auto;\n        padding: 12px 16px;\n        font-size: 16px;\n    }\n    \n    .filter-select {\n        width: 100%;\n        padding: 12px 16px;\n        font-size: 16px;\n        min-width: auto;\n    }\n    \n    .filter-label {\n        font-size: 15px;\n        font-weight: 600;\n        margin-bottom: 2px;\n    }\n    \n    .view-analytics-btn {\n        width: 100%;\n        padding: 14px 24px;\n        font-size: 16px;\n        margin-top: 8px;\n    }\n}",
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Analytics and Reporting</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"hero-section\">\n            <div class=\"hero-tag\">Analytics and Reporting</div>\n            <h1 class=\"hero-title\">Make smart business decisions, quickly</h1>\n            <p class=\"hero-subtitle\">Real-time and reliable data about your store, no set-up required</p>\n            <button class=\"hero-button\" onclick=\"viewAnalytics()\">\n                View your analytics\n            </button>\n        </div>\n        \n        <div class=\"filters-section\">\n            <div class=\"filters-row\">\n                <div class=\"filter-group\">\n                    <label class=\"filter-label\">Date Range</label>\n                    <div class=\"date-range\">\n                        <input type=\"text\" class=\"date-input\" placeholder=\"mm / dd / yyyy\" id=\"startDate\">\n                        <span class=\"date-separator\">â€”</span>\n                        <input type=\"text\" class=\"date-input\" placeholder=\"mm / dd / yyyy\" id=\"endDate\">\n                    </div>\n                </div>\n                \n                <div class=\"filter-group\">\n                    <label class=\"filter-label\">Device Type</label>\n                    <select class=\"filter-select\" id=\"deviceType\">\n                        <option value=\"all\">All</option>\n                        <option value=\"mobile\">Mobile</option>\n                        <option value=\"desktop\">Desktop</option>\n                        <option value=\"tablet\">Tablet</option>\n                    </select>\n                </div>\n                \n                <div class=\"filter-group\">\n                    <label class=\"filter-label\">Country</label>\n                    <select class=\"filter-select\" id=\"country\">\n                        <option value=\"all\">All</option>\n                        <option value=\"us\">United States</option>\n                        <option value=\"ca\">Canada</option>\n                        <option value=\"uk\">United Kingdom</option>\n                        <option value=\"au\">Australia</option>\n                    </select>\n                </div>\n                \n                <div class=\"filter-group\">\n                    <label class=\"filter-label\">Product</label>\n                    <select class=\"filter-select\" id=\"product\">\n                        <option value=\"all\">All</option>\n                        <option value=\"clothing\">Clothing</option>\n                        <option value=\"accessories\">Accessories</option>\n                        <option value=\"electronics\">Electronics</option>\n                    </select>\n                </div>\n                \n                <div class=\"filter-group\">\n                    <button class=\"view-analytics-btn\" onclick=\"applyFilters()\">\n                        Apply Filters\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <script src=\"script.js\"></script>\n</body>\n</html>",
    "js": "// Initialize date inputs with today's date\nfunction initializeDates() {\n    const today = new Date();\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(today.getDate() - 30);\n    \n    const formatDate = (date) => {\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const day = date.getDate().toString().padStart(2, '0');\n        const year = date.getFullYear();\n        return `${month}/${day}/${year}`;\n    };\n    \n    document.getElementById('startDate').value = formatDate(thirtyDaysAgo);\n    document.getElementById('endDate').value = formatDate(today);\n}\n\nfunction viewAnalytics() {\n    // This function can be connected to Appsmith navigation or API calls\n    console.log('Navigating to analytics dashboard...');\n    alert('Navigating to analytics dashboard...');\n    // Example: navigateTo('AnalyticsDashboard');\n    \n    // For Appsmith integration, you can trigger:\n    // - Navigate to another page\n    // - Open a modal\n    // - Trigger a query\n    // - Update store values\n}\n\nfunction applyFilters() {\n    const filters = {\n        startDate: document.getElementById('startDate').value,\n        endDate: document.getElementById('endDate').value,\n        deviceType: document.getElementById('deviceType').value,\n        country: document.getElementById('country').value,\n        product: document.getElementById('product').value\n    };\n    \n    console.log('Applied filters:', filters);\n    alert('Filters applied! Check console for details.');\n    \n    // This can be connected to Appsmith queries\n    // Example: RefreshAnalyticsQuery.run(filters);\n    \n    // Make filters available globally for Appsmith\n    window.analyticsFilters = filters;\n    \n    // Trigger custom event that Appsmith can listen to\n    window.dispatchEvent(new CustomEvent('filtersChanged', { detail: filters }));\n    \n    // You can also store filters in Appsmith store\n    // storeValue('analyticsFilters', filters);\n}\n\n// Utility function to get current filters\nfunction getCurrentFilters() {\n    return {\n        startDate: document.getElementById('startDate').value,\n        endDate: document.getElementById('endDate').value,\n        deviceType: document.getElementById('deviceType').value,\n        country: document.getElementById('country').value,\n        product: document.getElementById('product').value\n    };\n}\n\n// Function to update filters programmatically (for Appsmith integration)\nfunction updateFilters(newFilters) {\n    if (newFilters.startDate) document.getElementById('startDate').value = newFilters.startDate;\n    if (newFilters.endDate) document.getElementById('endDate').value = newFilters.endDate;\n    if (newFilters.deviceType) document.getElementById('deviceType').value = newFilters.deviceType;\n    if (newFilters.country) document.getElementById('country').value = newFilters.country;\n    if (newFilters.product) document.getElementById('product').value = newFilters.product;\n    \n    // Auto-apply the new filters\n    applyFilters();\n}\n\n// Function to reset filters to default\nfunction resetFilters() {\n    document.getElementById('deviceType').value = 'all';\n    document.getElementById('country').value = 'all';\n    document.getElementById('product').value = 'all';\n    initializeDates();\n    applyFilters();\n}\n\n// Make functions available globally for Appsmith integration\nwindow.viewAnalytics = viewAnalytics;\nwindow.applyFilters = applyFilters;\nwindow.getCurrentFilters = getCurrentFilters;\nwindow.updateFilters = updateFilters;\nwindow.resetFilters = resetFilters;\nwindow.getFilters = () => window.analyticsFilters;\n\n// Initialize the component when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', function() {\n    initializeDates();\n    \n    // Set up event listeners for auto-applying filters\n    document.querySelectorAll('.filter-select, .date-input').forEach(element => {\n        element.addEventListener('change', function() {\n            // Auto-apply filters after a short delay\n            setTimeout(applyFilters, 300);\n        });\n    });\n    \n    // Initialize filters object\n    window.analyticsFilters = getCurrentFilters();\n    \n    console.log('Analytics hero section initialized');\n});\n\n// Additional utility functions for Appsmith integration\nconst AnalyticsUtils = {\n    // Format date for display\n    formatDate: (date) => {\n        if (!date) return '';\n        const d = new Date(date);\n        const month = (d.getMonth() + 1).toString().padStart(2, '0');\n        const day = d.getDate().toString().padStart(2, '0');\n        const year = d.getFullYear();\n        return `${month}/${day}/${year}`;\n    },\n    \n    // Parse date from string\n    parseDate: (dateString) => {\n        if (!dateString) return null;\n        const [month, day, year] = dateString.split('/');\n        return new Date(year, month - 1, day);\n    },\n    \n    // Validate date range\n    validateDateRange: () => {\n        const startDate = AnalyticsUtils.parseDate(document.getElementById('startDate').value);\n        const endDate = AnalyticsUtils.parseDate(document.getElementById('endDate').value);\n        \n        if (startDate && endDate && startDate > endDate) {\n            alert('Start date must be before end date');\n            return false;\n        }\n        return true;\n    },\n    \n    // Get date range in days\n    getDateRangeInDays: () => {\n        const startDate = AnalyticsUtils.parseDate(document.getElementById('startDate').value);\n        const endDate = AnalyticsUtils.parseDate(document.getElementById('endDate').value);\n        \n        if (startDate && endDate) {\n            const diffTime = Math.abs(endDate - startDate);\n            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n            return diffDays;\n        }\n        return 0;\n    }\n};\n\n// Make utility functions available globally\nwindow.AnalyticsUtils = AnalyticsUtils;"
  },
  "version": 1,
  "widgetId": "temth6ol40",
  "widgetName": "Custom6"
}